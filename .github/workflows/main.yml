# This is a basic workflow to help you get started with Actions

name: CI


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

        # Set up Python 3.6 environment
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # Run our unit tests using the test application
      - name: Run unit tests
        run: |
          python test_application.py
  deploy:
    # Only run this job if "build" has ended successfully
    needs:
      - build

    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # Set up Python 3.6 environment
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      # Elastic Beanstalk CLI version
      - name: Get EB CLI version
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          eb --version

          # Configure AWS Credentials

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # Create the Elastic Beanstalk application
      - name: Create EBS application
        run: |
          eb init -p python-3.11 Flask_Basic --region eu-central-1

      # Deploy to (or Create) the Elastic Beanstalk environment
      - name: Create test environment & deploy
        run: |
          (eb use test-environment && eb status test-environment && eb deploy) || eb create test-environment
